package server

import (
	"encoding/json"
	"net/http"
	"net/http/httptest"
	"testing"

	"github.com/go-chi/chi/v5"
	"github.com/stretchr/testify/assert"
)

// Checks if routes are registered correctly
func TestRegisterRoutes(t *testing.T) {
	s := &Server{}
	hendler := s.RegisterRoutes()

	r, ok := hendler.(*chi.Mux)
	assert.True(t, ok, "Router should be of type *chi.Mux")
	assert.NotNil(t, r, "Chi router should not be nil")
}

// Checks the hello world handler response
func TestHelloWorldHandler(t *testing.T) {
	s := &Server{}
	r := s.RegisterRoutes()

	req, _ := http.NewRequest("GET", "/", nil)
	w := httptest.NewRecorder()
	r.ServeHTTP(w, req)

	assert.Equal(t, http.StatusOK, w.Code, "Status code should be 200")

	var resp map[string]string
	err := json.Unmarshal(w.Body.Bytes(), &resp)
	assert.Nil(t, err, "Should not have an error unmarshalling response")
	assert.Equal(t, "Hello World", resp["message"], "Response message should be 'Hello World'")
}